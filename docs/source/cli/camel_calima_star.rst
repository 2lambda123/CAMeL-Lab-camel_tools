camel_calima_star
=================

About
-----

The ``camel_calima_star`` utility is a command line interface to the
`CALIMA Star <http://www.aclweb.org/anthology/W18-5816>`_ morphological
analyzer, generator, and reinflector.

Usage
-----

Below is the usage information that can be generated by running
``camel_calima_star --help``.

.. code-block:: none

   Usage:
       camel_calima_star analyze
                         [-D DISAMBIG | --disambig=DISAMBIG]
                         [-d DATABASE | --db=DATABASE]
                         [-b BACKOFF | --backoff=BACKOFF]
                         [-c | --cache]
                         [-o OUTPUT | --output=OUTPUT] [FILE]
       camel_calima_star generate
                         [-d DATABASE | --db=DATABASE]
                         [-b BACKOFF | --backoff=BACKOFF]
                         [-o OUTPUT | --output=OUTPUT] [FILE]
       camel_calima_star reinflect
                         [-d DATABASE | --db=DATABASE]
                         [-o OUTPUT | --output=OUTPUT] [FILE]
       camel_calima_star (-l | --list)
       camel_calima_star (-v | --version)
       camel_calima_star (-h | --help)

   Options:
     -b BACKOFF --backoff=BACKOFF
           Backoff mode for analyzer and generator. In analyze mode, it can have
           the following values: NONE, NOAN_ALL, NOAN_PROP, ADD_ALL, ADD_PROP.
           In generate mode it can have the following values: NONE, REINFLECT.
           [default: NONE]
     -c --cache
           Cache computed analyses (only in analyze mode).
     -D DISAMBIG --disambig=DISAMBIG
           Disambiguate analyses using pos-lex frequency showing only the top
           DISAMBIG analyses. DISAMBIG should be non-zero positive integer.
     -d DATABASE --db=DATABASE
           CalimaStar database to use. DATABASE could be the name of a builtin
           database or a path to a database file. [default: almor-msa]
     -o OUTPUT --output=OUTPUT
           Output file. If not specified, output will be printed to stdout.
     -l --list
           List builtin databases with their respective versions.
     -h --help
           Show this screen.
     -v --version
           Show version.

Analyze Mode
------------

In analyze mode, ``camel_calima_star`` determines all the possible out-of-context
combinations of lemmas, morphological features, and diacritizations for
undiacritized surface words.

**Input:**

The input should be a space seperated list of words. Punctuation **must** also
be space seperated, otherwise Arabic words will be treated as foreign words.

Example:

.. code-block:: none

   $ camel_calima_star analyze
   مشيت في الشارع

**Output:**

For each space seperated word in the input, ``camel_calima_star`` will output a
line indicating the word followed by either a line of feature-value pairs for
each analysis generated or a line with 'NO_ANALYSIS', to indicate no analyses
could be generated, followed by an empty line. An additional empty line is
printed to indicate the end of a line of input.
See :doc:`/reference/calima_star_features` for more information.

The output for the above example would be:

.. code-block:: none

   #WORD: مشيت
   diac:مَشَّيْتَ lex:مَشَّى_1 bw:+مَشَّي/PV+تَ/PVSUFF_SUBJ:2MS gloss:+make_walk;adjust+you_[masc.sg.]_<verb> pos:verb prc3:0 prc2:0 prc1:0 prc0:0 per:2 asp:p vox:a mod:i gen:m num:s stt:na cas:na enc0:0 rat:na source:lex
   diac:مَشَيْتُ lex:مَشَى-i_1 bw:+مَشَي/PV+تُ/PVSUFF_SUBJ:1S gloss:+walk;proceed+I_<verb> pos:verb prc3:0 prc2:0 prc1:0 prc0:0 per:1 asp:p vox:a mod:i gen:m num:s stt:na cas:na enc0:0 rat:na source:lex
   diac:مَشَيْتِ lex:مَشَى-i_1 bw:+مَشَي/PV+تِ/PVSUFF_SUBJ:2FS gloss:+walk;proceed+you_[fem.sg.]_<verb> pos:verb prc3:0 prc2:0 prc1:0 prc0:0 per:2 asp:p vox:a mod:i gen:f num:s stt:nacas:na enc0:0 rat:na source:lex
   diac:مَشَّيْتِ lex:مَشَّى_1 bw:+مَشَّي/PV+تِ/PVSUFF_SUBJ:2FS gloss:+make_walk;adjust+you_[fem.sg.]_<verb> pos:verb prc3:0 prc2:0 prc1:0 prc0:0 per:2 asp:p vox:a mod:i gen:f num:s stt:na cas:na enc0:0 rat:na source:lex
   diac:مَشَيْتَ lex:مَشَى-i_1 bw:+مَشَي/PV+تَ/PVSUFF_SUBJ:2MS gloss:+walk;proceed+you_[masc.sg.]_<verb> pos:verb prc3:0 prc2:0 prc1:0 prc0:0 per:2 asp:p vox:a mod:i gen:m num:s stt:na cas:na enc0:0 rat:na source:lex
   diac:مَشَّيْتُ lex:مَشَّى_1 bw:+مَشَّي/PV+تُ/PVSUFF_SUBJ:1S gloss:+make_walk;adjust+I_<verb> pos:verb prc3:0 prc2:0 prc1:0 prc0:0 per:1 asp:p vox:a mod:i gen:m num:s stt:na cas:na enc0:0 rat:na source:lex

   #WORD: في
   diac:فِيَّ lex:فِي_1 bw:+فِي/PREP+يَ/PRON_1S gloss:+in+me pos:prep prc3:0 prc2:0 prc1:0 prc0:na per:na asp:na vox:na mod:na gen:na num:na stt:na cas:na enc0:1s_pron rat:na source:lex
   diac:فِي lex:فِي_2 bw:+ڤِي/ABBREV+ gloss:+V.+ pos:abbrev prc3:na prc2:na prc1:na prc0:na per:na asp:na vox:na mod:na gen:na num:na stt:na cas:na enc0:na rat:na source:lex
   diac:فِي lex:فِي_1 bw:+فِي/PREP+ gloss:+in+ pos:prep prc3:0 prc2:0 prc1:0 prc0:na per:na asp:na vox:na mod:na gen:na num:na stt:na cas:na enc0:0 rat:na source:lex

   #WORD: الشارع
   diac:الشّارِعِ lex:شارِع_1 bw:ال/DET+شارِع/NOUN+ِ/CASE_DEF_GEN gloss:the+street+[def.gen.] pos:noun prc3:0 prc2:0 prc1:0 prc0:Al_det per:na asp:na vox:na mod:na gen:m num:s stt:d cas:g enc0:0 rat:y source:lex
   diac:الشّارِعَ lex:شارِع_2 bw:ال/DET+شارِع/NOUN+َ/CASE_DEF_ACC gloss:the+legislator+[def.acc.] pos:noun prc3:0 prc2:0 prc1:0 prc0:Al_det per:na asp:na vox:na mod:na gen:m num:s stt:d cas:a enc0:0 rat:y source:lex
   diac:الشّارِع lex:شارِع_2 bw:ال/DET+شارِع/NOUN+ gloss:the+legislator+ pos:noun prc3:0 prc2:0 prc1:0 prc0:Al_det per:na asp:na vox:na mod:na gen:m num:s stt:d cas:u enc0:0 rat:y source:lex
   diac:الشّارِعَ lex:شارِع_1 bw:ال/DET+شارِع/NOUN+َ/CASE_DEF_ACC gloss:the+street+[def.acc.] pos:noun prc3:0 prc2:0 prc1:0 prc0:Al_det per:na asp:na vox:na mod:na gen:m num:s stt:d cas:a enc0:0 rat:y source:lex
   diac:الشّارِعِ lex:شارِع_2 bw:ال/DET+شارِع/NOUN+ِ/CASE_DEF_GEN gloss:the+legislator+[def.gen.] pos:noun prc3:0 prc2:0 prc1:0 prc0:Al_det per:na asp:na vox:na mod:na gen:m num:s stt:d cas:g enc0:0 rat:y source:lex
   diac:الشّارِعُ lex:شارِع_1 bw:ال/DET+شارِع/NOUN+ُ/CASE_DEF_NOM gloss:the+street+[def.nom.] pos:noun prc3:0 prc2:0 prc1:0 prc0:Al_det per:na asp:na vox:na mod:na gen:m num:s stt:d cas:n enc0:0 rat:y source:lex
   diac:الشّارِع lex:شارِع_1 bw:ال/DET+شارِع/NOUN+ gloss:the+street+ pos:noun prc3:0 prc2:0 prc1:0 prc0:Al_det per:na asp:na vox:na mod:na gen:m num:s stt:d cas:u enc0:0 rat:y source:lex
   diac:الشّارِعُ lex:شارِع_2 bw:ال/DET+شارِع/NOUN+ُ/CASE_DEF_NOM gloss:the+legislator+[def.nom.] pos:noun prc3:0 prc2:0 prc1:0 prc0:Al_det per:na asp:na vox:na mod:na gen:m num:s stt:d cas:n enc0:0 rat:y source:lex
   

**Backoff Modes:**


* **NONE** No back off analyses are generated.
* **NOAN_ALL** Generate all backoff analyses only if no analyses are generated.
* **NOAN_PROP** Generate proper noun backoff analyses if no analyses are
  generated.
* **ADD_ALL** Generate all backoff analyses in addition to generated analyses.
* **ADD_PROP** Generate proper noun backoff analyses in addition to generated
  analyses.

Generate Mode
-------------

In generate mode, ``camel_calima_star`` generates all the possible inflections
of a given lemma, part-of-speech and any desired subset set of morphological
features.

**Input:**
The input should be provided one line per word starting witht the lemma to
generate followed by space seperated feature-value pairs which themselves are
colon seperated (ie. \ ``lemma feature_1:value_1 feature_2:value_2 ...``\ ).
The ``pos`` feature should **always** be specified.
Note that, while each line should begin with lemma, the feature-value pairs can
be specified in any order.
See :doc:`/reference/calima_star_features` for more information.

Example:

.. code-block:: none

   $ camel_calima_star generate
   شارِع pos:noun gen:m num:p

**Output:**

For each line in the input, ``camel_calima_star`` will output a line indicating
the lemma followed by either a line of feature-value pairs for each analysis
generated or a line with 'NO_ANALYSIS', to indicate no analyses could be
generated, followed by an empty line.
See :doc:`/reference/calima_star_features` for more information.

The output for the above example would be:

.. code-block:: none

   #LEMMA: شارِع
   diac:شارِعِينَ lex:شارِع_2 bw:+شارِع/NOUN+ِيْنَ/NSUFF_MASC_PL_GEN gloss:+legislator+[masc.pl.] pos:noun prc3:0 prc2:0 prc1:0 prc0:0 per:na asp:na vox:na mod:na gen:m num:p stt:i cas:g enc0:0 rat:y source:lex
   diac:شارِعِي lex:شارِع_2 bw:+شارِع/NOUN+ِي/NSUFF_MASC_PL_ACC_POSS gloss:+legislator+[masc.pl.] pos:noun prc3:0 prc2:0 prc1:0 prc0:0 per:na asp:na vox:na mod:na gen:m num:p stt:c cas:a enc0:0 rat:y source:lex
   diac:شارِعُونَ lex:شارِع_2 bw:+شارِع/NOUN+ُونَ/NSUFF_MASC_PL_NOM gloss:+legislator+[masc.pl.] pos:noun prc3:0 prc2:0 prc1:0 prc0:0 per:na asp:na vox:na mod:na gen:m num:p stt:i cas:n enc0:0 rat:y source:lex
   diac:شارِعِينَ lex:شارِع_2 bw:+شارِع/NOUN+ِيْنَ/NSUFF_MASC_PL_ACC gloss:+legislator+[masc.pl.] pos:noun prc3:0 prc2:0 prc1:0 prc0:0 per:na asp:na vox:na mod:na gen:m num:p stt:i cas:a enc0:0 rat:y source:lex
   diac:شارِعِي lex:شارِع_2 bw:+شارِع/NOUN+ِي/NSUFF_MASC_PL_GEN_POSS gloss:+legislator+[masc.pl.] pos:noun prc3:0 prc2:0 prc1:0 prc0:0 per:na asp:na vox:na mod:na gen:m num:p stt:c cas:g enc0:0 rat:y source:lex
   diac:شارِعُو lex:شارِع_2 bw:+شارِع/NOUN+ُو/NSUFF_MASC_PL_NOM_POSS gloss:+legislator+[masc.pl.] pos:noun prc3:0 prc2:0 prc1:0 prc0:0 per:na asp:na vox:na mod:na gen:m num:p stt:c cas:n enc0:0 rat:y source:lex
   

**Backoff Modes:**


* **NONE** No back off analyses are generated.
* **REINFLECT** Generate all backoff analyses only if no analyses are generated.

Reinflect Mode
--------------

In reinflect mode, given a seed word and specifific inflectional features,
``camel_calima_star`` generates new words and their corresponding analyses.

**Input:**

The input should be provided one line per word starting witht the word to
reinflect followed by space seperated feature-value pairs which themselves are
colon seperated
(ie. \ ``word feature_1:value_1 feature_2:value_2 ...``\ ).
Note that, while each line should begin with the word to be reinflected, the
feature-value pairs can be specified in any order.
See :doc:`/reference/calima_star_features` for more information.

Example:

.. code-block:: none

   $ camel_calima_star reinflect
   شوارع gen:m num:d prc1:bi_prep

**Output:**

For each line in the input, ``camel_calima_star`` will output a line indicating
the word followed by either a line of feature-value pairs for each analysis
generated or a line with 'NO_ANALYSIS', to indicate no analyses could be
generated, followed by an empty line.
See :doc:`/reference/calima_star_features` for more information.

The output for the above example would be:

.. code-block:: none

   #WORD: شوارع
   diac:بِشارِعَيْ lex:شارِع_2 bw:بِ/PREP+شارِع/NOUN+َيْ/NSUFF_MASC_DU_GEN_POSS gloss:by;with+legislator+two pos:noun prc3:0 prc2:0 prc1:bi_prep prc0:0 per:na asp:na vox:na mod:na gen:m num:d stt:c cas:g enc0:0 rat:y source:lex
   diac:بِشارِعَيْنِ lex:شارِع_1 bw:بِ/PREP+شارِع/NOUN+َيْنِ/NSUFF_MASC_DU_GEN gloss:by;with+street+two pos:noun prc3:0 prc2:0 prc1:bi_prep prc0:0 per:na asp:na vox:na mod:na gen:m num:d stt:i cas:g enc0:0 rat:y source:lex
   diac:بِشارِعَيْنِ lex:شارِع_2 bw:بِ/PREP+شارِع/NOUN+َيْنِ/NSUFF_MASC_DU_ACC gloss:by;with+legislator+two pos:noun prc3:0 prc2:0 prc1:bi_prep prc0:0 per:na asp:na vox:na mod:na gen:m num:d stt:i cas:a enc0:0 rat:y source:lex
   diac:بِشارِعَيْ lex:شارِع_1 bw:بِ/PREP+شارِع/NOUN+َيْ/NSUFF_MASC_DU_ACC_POSS gloss:by;with+street+two pos:noun prc3:0 prc2:0 prc1:bi_prep prc0:0 per:na asp:na vox:na mod:na gen:m num:d stt:c cas:a enc0:0 rat:y source:lex
   diac:بِشارِعَيْنِ lex:شارِع_1 bw:بِ/PREP+شارِع/NOUN+َيْنِ/NSUFF_MASC_DU_ACC gloss:by;with+street+two pos:noun prc3:0 prc2:0 prc1:bi_prep prc0:0 per:na asp:na vox:na mod:na gen:m num:d stt:i cas:a enc0:0 rat:y source:lex
   diac:بِشارِعَيْ lex:شارِع_1 bw:بِ/PREP+شارِع/NOUN+َيْ/NSUFF_MASC_DU_GEN_POSS gloss:by;with+street+two pos:noun prc3:0 prc2:0 prc1:bi_prep prc0:0 per:na asp:na vox:na mod:na gen:m num:d stt:c cas:g enc0:0 rat:y source:lex
   diac:بِشارِعَيْ lex:شارِع_2 bw:بِ/PREP+شارِع/NOUN+َيْ/NSUFF_MASC_DU_ACC_POSS gloss:by;with+legislator+two pos:noun prc3:0 prc2:0 prc1:bi_prep prc0:0 per:na asp:na vox:na mod:na gen:m num:d stt:c cas:a enc0:0 rat:y source:lex
   diac:بِشارِعَيْنِ lex:شارِع_2 bw:بِ/PREP+شارِع/NOUN+َيْنِ/NSUFF_MASC_DU_GEN gloss:by;with+legislator+two pos:noun prc3:0 prc2:0 prc1:bi_prep prc0:0 per:na asp:na vox:na mod:na gen:m num:d stt:i cas:g enc0:0 rat:y source:lex
   

.. _calima_star_databases:

Databases
---------

We provide builtin databases to be able to run ``camel_calima_star`` out of the
box.

Below is a list of databases that can be passed to ``-d`` or ``--db``:

.. note::
   While we currently only provide one builtin database, more will be added over
   time.

* **almor-msa** Database for analyzing Modern Standard Arabic. [#fn1]_

If no database is specified, **almor-msa** is used.

You can always check what builtin databases are provided in your current
``camel_tools`` installation by running ``camel_calima_star --list``.
Alternatively, you can pass in a path to a database of your chosing instead of
one of the above listed databases.

.. rubric:: Footnotes

.. [#fn1] **almor-msa** is a modified version of the `almor-msa-r31.db` database
   that ships with
   `MADAMIRA <http://innovation.columbia.edu/technologies/cu14012_arabic-language-disambiguation-for-natural-language-processing-applications>`_.
   The `almor-msa-r31.db` database is distributed under the
   `GNU General Public License version 2 <https://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html#SEC1>`_.
